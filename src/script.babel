
const NumKey = props => { 
	return (
		<button id={props.id} onClick={props.handleClick} className="num-key" value={props.value}>{props.value}</button>
	);
};
const OpKey = props => { 
	return (
		<button id={props.id} onClick={props.handleClick} className="op-key" value={props.value}>{props.value}</button>
	);
};

const Display = props => {
	return (
		<div>
			<div id="formula">
				{props.formula}
			</div>
			<div id="display">
				{props.out}	
			</div>
		</div>
	);
};

class Calculator extends React.Component {
	constructor(){
		super();
		this.state = {
			currentValue: 0,
			out: '0',
			formula: ''
		}
		this.handleClear = this.handleClear.bind(this);
		this.handleNumClick = this.handleNumClick.bind(this);
		this.handleOpClick = this.handleOpClick.bind(this);
		this.handleEquals = this.handleEquals.bind(this);
	}
	handleClear(){
		this.setState(
			{
				out: '0',
				formula: '',
			}
		);
	}
	handleNumClick(event){
		const inp = event.target.value;
		const newValue = this.state.out==='0' ? ""+inp : this.state.out+""+inp;
		if (inp==='.' && this.state.out.includes('.')){
			return;
		}
		this.setState(
			{
				formula: this.state.formula + "" + event.target.value,
				out: newValue
			}
		);
	}
	removeOps(){
		var formula = this.state.formula;
		while ("/-*+".includes(formula.slice(-1))){
			formula = formula.slice(0,-1);
		}
		return formula;
	}
	handleOpClick(event){
		var newFormula;
		if (event.target.value==='-'){
			newFormula = this.state.formula + "" + event.target.value;
		}
		else {
			newFormula = this.removeOps() + "" + event.target.value
		}
		this.setState(
			{
				formula: newFormula,
				out: event.target.value
			}
		);
	}
	handleEquals(){
		const result = math.evaluate(this.state.formula);
		this.setState(
			{
				out: result,
				formula: ""+result
			}
		);
	}
	render(){
		return(
			<div id="calc">
				<Display out={this.state.out} formula={this.state.formula}/>
				<div id="button-pad">
					<button id="clear" onClick={this.handleClear}>AC</button>
					<OpKey id="divide" handleClick={this.handleOpClick} value="/" />
					<OpKey id="multiply" handleClick={this.handleOpClick} value="*" />
					<NumKey id="seven" handleClick={this.handleNumClick} value={7} />
					<NumKey id="eight" handleClick={this.handleNumClick} value={8} />
					<NumKey id="nine" handleClick={this.handleNumClick} value={9} />
					<OpKey id="subtract" handleClick={this.handleOpClick} value="-" />
					<NumKey id="four" handleClick={this.handleNumClick} value={4} />
					<NumKey id="five" handleClick={this.handleNumClick} value={5} />
					<NumKey id="six" handleClick={this.handleNumClick} value={6} />
					<OpKey id="add" handleClick={this.handleOpClick} value="+" />
					<NumKey id="one" handleClick={this.handleNumClick} value={1} />
					<NumKey id="two" handleClick={this.handleNumClick} value={2} />
					<NumKey id="three" handleClick={this.handleNumClick} value={3} />
					<button 
						id="equals" 
						onClick={this.handleEquals} 
						className="op-key">
						=
					</button>
					<NumKey id="zero" handleClick={this.handleNumClick} value={0} />
					<NumKey id="decimal" handleClick={this.handleNumClick} value="." />
				</div>
			</div>
		);
	}
}

ReactDOM.render(<Calculator />, document.getElementById("app"));